module top_module (
    input clk,
    input reset,      // Synchronous reset
    input data,
    output reg start_shifting);
    
    reg [2:0] state=3'b100,next_state;
    parameter [3:0]	s0 = 3'b000,
      				s1 = 3'b001,
    				s2 = 3'b010,
    				s3 = 3'b011,
   				    s4 = 3'b100;      
    
    always @(posedge clk)
        begin
            if(reset)
            begin
                state <= s0;
                start_shifting <= 'd0;
            end
            else
                case(state)
                    s0:
                        begin
                            if(data)
                                state <= s1;
                            else
                                state <= s0;
                        end
                    s1:
                        begin
                            if(data)
                                state <= s2;
                            else
                                state <= s0;
                        end
                    s2:
                        begin
                            if(data)
                                state <= s2;
                            else
                                state <= s3;
                        end
                    s3:
                        begin
                            if(data)
                                begin
                                state <= s4;
                                    start_shifting <= 'd1;
                                end
                            else
                                state <= s0;
                        end
                    
                    default : 
                        begin
                            state <= s4;
                            start_shifting <= 'd1;
                        end
                endcase
        end
    
   
    
    endmodule
