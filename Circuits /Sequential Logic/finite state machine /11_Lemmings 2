module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    output walk_left,
    output walk_right,
    output aaah ); 
    
    parameter LEFT =2'b00,RIGHT =2'b01, GROUND_L =2'b10,GROUND_R = 2'b11;
    reg [1:0] state,next_state;
	
    always@* 
        begin
            case(state)
                LEFT : 
                    begin
                        if(ground)
                                next_state <= (bump_left)? RIGHT :LEFT;
                       else
                           begin
                           	   next_state <= GROUND_L;
                           end
                    end
                RIGHT :
                     begin
                         if(ground)
                             next_state <= (bump_right)? LEFT :RIGHT;
                       else
                           begin
                           	   next_state <= GROUND_R;
                           end
                    end
                GROUND_L : next_state <= (ground)? LEFT  : GROUND_L;
                GROUND_R : next_state <= (ground)? RIGHT  : GROUND_R;
            endcase
        end
    
    always@(posedge clk or posedge areset)
        begin
            if(areset)
                state <= LEFT;
            else 
                state <= next_state;
        end
    
    assign walk_left = (state == LEFT);
    assign walk_right = (state == RIGHT);
    assign aaah = (state == GROUND_L || state == GROUND_R);
                        
                                
endmodule
