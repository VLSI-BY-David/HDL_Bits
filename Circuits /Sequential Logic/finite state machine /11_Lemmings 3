module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    input dig,
    output walk_left,
    output walk_right,
    output aaah,
    output digging ); 

    parameter LEFT =3'b000,RIGHT =3'b001, GROUND_L =3'b010,GROUND_R = 3'b011,DIG_L = 3'b100,DIG_R = 3'b101;
    reg [2:0] state,next_state;
	
    always@* 
        begin
            case(state)
                LEFT : 
                    begin
                        if(ground)
                            begin
                                if(dig)
                                    next_state <= DIG_L;
                                else
                                    next_state <= (bump_left)? RIGHT :LEFT;
                            end
                       else
                           begin
                           	   next_state <= GROUND_L;
                           end
                    end
                RIGHT :
                     begin
                         if(ground)
                             begin
                                 if(dig)
                                    next_state <= DIG_R;
                                else
                                 next_state <= (bump_right)? LEFT :RIGHT;
                             end
                       else
                           begin
                           	   next_state <= GROUND_R;
                           end
                    end
                GROUND_L : next_state <= (ground)? LEFT  : GROUND_L;
                GROUND_R : next_state <= (ground)? RIGHT  : GROUND_R;
                DIG_L : next_state <= (ground)? DIG_L : GROUND_L;
                DIG_R : next_state <= (ground)? DIG_R : GROUND_R;
            endcase
        end
    
    always@(posedge clk or posedge areset)
        begin
            if(areset)
                state <= LEFT;
            else 
                state <= next_state;
        end
    
    assign walk_left = (state == LEFT);
    assign walk_right = (state == RIGHT);
    assign aaah = (state == GROUND_L || state == GROUND_R);
    assign digging = (state ==DIG_L || state == DIG_R);
endmodule
