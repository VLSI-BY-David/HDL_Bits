module top_module(
    input clk,
    input [7:0] in,
    input reset,    // Synchronous reset
    output done); //

    reg [2:0] state = 2'b00;
    localparam s0= 2'b00 ,s1= 2'b01, s2= 2'b10 ,DONE = 2'b11;
    // State transition logic (combinational)
    always@(posedge clk)
        begin
            if(reset)
                state <= s0;
            else
                begin
                    case(state)
                        s0: state <= (in[3])? s1:s0;
                        s1: state <= s2;
                        s2: state <= DONE;
                        DONE: state <= (in[3])?s1:s0;
                    endcase
                end
        end
    

    // State flip-flops (sequential)
 
    // Output logic
    assign done = (state == DONE);

endmodule
