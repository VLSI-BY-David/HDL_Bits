module top_module (
    input clk,
    input resetn,    // active-low synchronous reset
    input [3:1] r,   // request
    output [3:1] g   // grant
); 
    
    reg [1:0] state ;
    localparam [1:0] A = 'd0 , B= 'd1, C = 'd2 , D = 'd3; 
    
    always@(posedge clk)
        begin
            if(!resetn)
                state <= A;
            else
                begin
                    case (state )
                        A : 
                            begin
                                
                                if(r[1])
                                    state <= B;
                                else if( ~r[1] && r[2])
                                    state <= C;
                                else if( ~r[1] && ~r[2] && r[3])
                                    state <= D;
                                else 
                                    state <= A;
                            end
                        B : 
                            begin
                                state <= (r[1])? B : A;
                            end
                        C : 
                            begin
                                state <= (r[2])? C : A;
                            end
                        D : 
                            begin
                                state <= (r[3])? D : A;
                            end
                        default : state <= A;
                    endcase
                end
        end
    
    assign g[1] = (state == B);
    assign g[2] = (state == C);
    assign g[3] = (state == D);

endmodule
